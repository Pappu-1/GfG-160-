/* node for linked list

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

*/

class Solution {
    static Node reverse(Node head){
        Node pre = null;
        Node cur = head;
        Node nxt;
        while(cur != null){
            nxt = cur.next;
            cur.next = pre;
            pre = cur;
            cur =nxt;
        }
        return pre;
    }
    static Node addTwoLists(Node num1, Node num2) {
        // code here
        num1 = reverse(num1);
        num2 = reverse(num2);
        
        Node ans = null;
        Node res = null;
        int carry = 0;
        while(num1 != null || num2 != null || carry>0){
            int sum = carry;
            if(num1 != null){
                sum += num1.data;
                num1 = num1.next;
            }
            if(num2 != null){
                sum += num2.data;
                num2 = num2.next;
            }
            Node newNode = new Node(sum%10);
            carry = sum/10;
            if(ans == null){
                ans = newNode;
                res = newNode;
            }else{
                res.next = newNode;
                res = res.next;
            }
        }
        Node result = reverse(ans);
        while(result.data == 0){
            result = result.next;
        }
        return result;
    }
}
