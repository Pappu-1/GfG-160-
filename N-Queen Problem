

// User function Template for Java

class Solution {
    public void solve(int n,int curR,boolean[] col,boolean[] rdiag,boolean[] ldiag,ArrayList<ArrayList<Integer>> ans,ArrayList<Integer> res){
        if(curR == n){
            ans.add(new ArrayList<>(res));
            return;
        }
        for(int i=0;i<n;i++){
            if(col[i] == false && rdiag[curR+i] ==false && ldiag[curR-i+n-1] == false){
                res.add(i+1);
                col[i] = true;
                rdiag[curR+i] = true;
                ldiag[curR-i+n-1] = true;
                solve(n,curR+1,col,rdiag,ldiag,ans,res);
                res.remove(res.size()-1);
                col[i] = false;
                rdiag[curR+i] = false;
                ldiag[curR-i+n-1] = false;
            }
        }
    }
    public ArrayList<ArrayList<Integer>> nQueen(int n) {
        // code here
        boolean[] col = new boolean[n];
        boolean[] rdiag = new boolean[2*n-1];
        boolean[] ldiag = new boolean[2*n-1];
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> res = new ArrayList<>();
        solve(n,0,col,rdiag,ldiag,ans,res);
        return ans;
    }
}
